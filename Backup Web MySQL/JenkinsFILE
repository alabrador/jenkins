pipeline {
    agent any

    environment {
        BACKUP_DIR = "${env.WORKSPACE}/backups"
        REMOTE_HOST = credentials('REMOTE_HOST_APRONTO')
        REMOTE_PORT = credentials('REMOTE_PORT_APRONTO')
        DB_NAME = credentials('DB_NAME_SECRET')
        SSH_CREDENTIALS_ID = 'remote_ssh_apronto'
        MYSQL_USER = 'root'  // O usuario adecuado
        MYSQL_PASS = credentials('MYSQL_PASS_SECRET') // Si tienes password almacenado
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Preparar backup local') {
            steps {
                script {
                    sh "mkdir -p ${BACKUP_DIR}"
                }
            }
        }

        stage('Respaldar vía SSH remota') {
            steps {
                sshagent(credentials: [SSH_CREDENTIALS_ID]) {
                    script {
                        // Ejecutar mysqldump remoto
                        sh """
                            ssh -p ${REMOTE_PORT} ${REMOTE_HOST} "mysqldump -u ${MYSQL_USER} -p'${MYSQL_PASS}' ${DB_NAME} | gzip > /tmp/${DB_NAME}_\$(date +%F_%H-%M-%S).sql.gz"
                        """
                    }
                }
            }
        }

        stage('Descargar respaldo') {
            steps {
                sshagent(credentials: [SSH_CREDENTIALS_ID]) {
                    script {
                        sh """
                            scp -P ${REMOTE_PORT} ${REMOTE_HOST}:/tmp/${DB_NAME}_*.sql.gz ${BACKUP_DIR}/
                        """
                    }
                }
            }
        }

        stage('Limpiar respaldo remoto') {
            steps {
                sshagent(credentials: [SSH_CREDENTIALS_ID]) {
                    script {
                        // Borrar backups remotos con más de 7 días
                        sh """
                            ssh -p ${REMOTE_PORT} ${REMOTE_HOST} 'find /tmp -type f -name "${DB_NAME}_*.sql.gz" -mtime +7 -exec rm -f {} \\;'
                        """
                    }
                }
            }
        }

        stage('Limpiar respaldos locales antiguos') {
            steps {
                script {
                    // Borrar backups locales con más de 7 días
                    sh """
                        find ${BACKUP_DIR} -type f -name '${DB_NAME}_*.sql.gz' -mtime +7 -exec rm -f {} \\;
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Respaldo completado correctamente"
        }
        failure {
            echo "❌ Falló el respaldo"
        }
    }
}