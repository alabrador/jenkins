trigger: none

parameters:
  - name: firstName
    displayName: "Nombre"
    type: string
    default: ""

  - name: lastName
    displayName: "Apellidos"
    type: string
    default: ""

  - name: accountName
    displayName: "Nombre de cuenta (sAMAccountName)"
    type: string
    default: ""

  - name: password
    displayName: "Contraseña"
    type: string
    default: ""

  - name: jobTitle
    displayName: "Cargo"
    type: string
    default: ""

  - name: description
    displayName: "Descripción (cargo)"
    type: string
    default: ""

  - name: office
    displayName: "Oficina"
    type: string
    default: "MECO"
    values:
      - MECO
      - MATEO INURRIA
      - ITALIA

  - name: email
    displayName: "Correo electrónico"
    type: string
    default: ""

  - name: pager
    displayName: "Centro de costo"
    type: string
    default: ""

  - name: department
    displayName: "Departamento"
    type: string
    default: ""

  - name: company
    displayName: "Compañía"
    type: string
    default: "ALTER S.L."
    values:
      - ALTER S.L.
      - NUTRIBEN

  - name: manager
    displayName: "Manager (sAMAccountName)"
    type: string
    default: ""

pool:
  name: 'Default'
  demands:
    - agent.name -equals DC01

steps:
  - powershell: |
      Import-Module ActiveDirectory

      # Validación de parámetros obligatorios
      $required = @(
        "${{ parameters.firstName }}",
        "${{ parameters.lastName }}",
        "${{ parameters.accountName }}",
        "${{ parameters.password }}",
        "${{ parameters.email }}"
      )
      if ($required -contains "") {
        Write-Error "❌ Faltan parámetros obligatorios (Nombre, Apellidos, Cuenta, Contraseña, Email)"
        exit 1
      }

      $DisplayName = "${{ parameters.firstName }} ${{ parameters.lastName }}"
      $SecurePass = ConvertTo-SecureString "${{ parameters.password }}" -AsPlainText -Force
      $OUPath = "OU=CITRIX,OU=USUARIOS,OU=G_ALTER,DC=alter,DC=es"
      $upn = "${{ parameters.accountName }}@alter.es"

      # Validaciones de unicidad

      if (Get-ADUser -Filter { SamAccountName -eq "${{ parameters.accountName }}" }) {
        Write-Error "❌ El usuario '${{ parameters.accountName }}' ya existe."
        exit 1
      }

      if (Get-ADUser -Filter { UserPrincipalName -eq $upn }) {
        Write-Error "❌ El UserPrincipalName '$upn' ya existe."
        exit 1
      }

      $existingProxy = Get-ADUser -LDAPFilter "(proxyAddresses=SMTP:${{ parameters.email }})"
      if ($existingProxy) {
        Write-Error "❌ La dirección SMTP principal '${{ parameters.email }}' ya está asignada a otro usuario."
        exit 1
      }

      # Buscar DN del manager si se indicó
      $ManagerDN = $null
      if ("${{ parameters.manager }}" -ne "") {
        $mgr = Get-ADUser -Filter { SamAccountName -eq "${{ parameters.manager }}" }
        if ($mgr) {
          $ManagerDN = $mgr.DistinguishedName
        } else {
          Write-Warning "⚠️ Manager '${{ parameters.manager }}' no encontrado, se omitirá."
        }
      }

      # Definir atributos adicionales en una variable para evitar errores de salto de línea
      $otherAttrs = @{
        pager = "${{ parameters.pager }}"
        proxyAddresses = @(
          "SMTP:${{ parameters.email }}",
          "smtp:${{ parameters.email }}",
          "smtp:${{ parameters.accountName }}@grupoalter.onmicrosoft.com"
        )
      }

      # Crear usuario
      New-ADUser `
        -Name $DisplayName `
        -DisplayName $DisplayName `
        -GivenName "${{ parameters.firstName }}" `
        -Surname "${{ parameters.lastName }}" `
        -SamAccountName "${{ parameters.accountName }}" `
        -UserPrincipalName $upn `
        -AccountPassword $SecurePass `
        -Enabled $true `
        -Path $OUPath `
        -Description "${{ parameters.description }}" `
        -Office "${{ parameters.office }}" `
        -EmailAddress "${{ parameters.email }}" `
        -Title "${{ parameters.jobTitle }}" `
        -Department "${{ parameters.department }}" `
        -Company "${{ parameters.company }}" `
        -Manager $ManagerDN `
        -OtherAttributes $otherAttrs

      Write-Host "✅ Usuario creado: $DisplayName en $OUPath"
    displayName: "Crear usuario en AD con validaciones"
